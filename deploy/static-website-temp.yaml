AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template for hosting a static website on S3 and CloudFront with a temporary domain.

Parameters:
  BucketName:
    Description: The temporary bucket name for the website (e.g., my-temp-site)
    Type: String
  DomainName:
    Description: The domain name for the website (e.g., example.com)
    Type: String
  HostedZoneId:
    Description: The Route 53 hosted zone ID for the domain name
    Type: String
  CertificateArn:
    Description: The ARN of the ACM certificate
    Type: String

Resources:
  IAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "StaticWebsiteRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action: "sts:AssumeRole"
          - Effect: "Allow"
            Principal:
              AWS: !GetAtt IAMUser.Arn
            Action: "sts:AssumeRole"

  IAMPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "StaticWebsitePolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - s3:CreateBucket
              - s3:DeleteBucket
              - s3:GetBucketPolicy
              - s3:ListBucket
              - s3:ListObjectsV2
              - s3:PutBucketPolicy
              - s3:CreateBucketPolicy
              - s3:PutBucketWebsite
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
            Resource:
              - !Sub "arn:aws:s3:::${BucketName}"
              - !Sub "arn:aws:s3:::${BucketName}/*"
          - Effect: "Allow"
            Action:
              - cloudfront:CreateDistribution
              - cloudfront:DeleteDistribution
              - cloudfront:GetDistributionConfig
              - cloudfront:UpdateDistribution
              - cloudfront:CreateInvalidation
            Resource: "*"
          - Effect: "Allow"
            Action:
              - route53:ChangeResourceRecordSets
              - route53:CreateHostedZone
              - route53:DeleteHostedZone
              - route53:GetChange
              - route53:GetHostedZone
              - route53:ListHostedZonesByName
            Resource: "*"
          - Effect: "Allow"
            Action:
              - cloudformation:CreateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:DescribeChangeSet
              - cloudformation:UpdateStack
              - cloudformation:ListStackResources
              - cloudformation:GetTemplate
              - cloudformation:GetTemplateSummary
            Resource: "*"
          - Effect: "Allow"
            Action:
              - acm:RequestCertificate
              - acm:DescribeCertificate
              - acm:DeleteCertificate
              - acm:GetCertificate
            Resource: "*"
      Roles:
        - !Ref IAMRole

  IAMUser:
    Type: "AWS::IAM::User"
    Properties:
      UserName: "StaticWebsiteDeployUser"

  IAMUserPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "AllowAssumeRolePolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Resource: !GetAtt IAMRole.Arn
      Users:
        - !Ref IAMUser

  WebsiteBucket:
    Type: AWS::S3::Bucket
    DependsOn: IAMPolicy
    Properties:
      BucketName: !Ref BucketName
      WebsiteConfiguration:
        IndexDocument: index.html
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: false
        RestrictPublicBuckets: false

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: IAMPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${WebsiteBucket}/*"

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: IAMPolicy
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Origins:
          - DomainName: !GetAtt WebsiteBucket.DomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: ""
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          DefaultTTL: 86400
          MaxTTL: 31536000
          MinTTL: 0

Outputs:
  TempWebsiteURL:
    Description: Temporary URL of the website
    Value: !GetAtt WebsiteBucket.WebsiteURL
  CloudFrontURL:
    Description: CloudFront distribution domain name
    Value: !GetAtt CloudFrontDistribution.DomainName
  DistributionId:
    Description: CloudFront distribution ID
    Value: !Ref CloudFrontDistribution
  WebsiteBucketId:
    Description: WebsiteBucket ID
    Value: !Ref WebsiteBucket
